[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Validate",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-06-20 23:39:46.222262",
  "module": "Alfastack Task",
  "name": "Service Booking Email Customer After Approving",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Service Booking",
  "script": "\nprevious_status = frappe.db.get_value('Service Booking', doc.name, 'status')\n\n# frappe.msgprint(f\"Current Status: {doc.status}, Previous Status: {previous_status}\") # Debug statuses\n\nif doc.status == 'Approved' and previous_status != 'Approved':\n    frappe.msgprint(\"Status changed to Approved. Attempting to send email.\") # Debug: Status change detected\n\n    customer_email = \"alaajarah1@gmail.com\" # Hardcoded for testing. You commented out the dynamic lookup.\n\n    if customer_email:\n        subject = f\"Your Service Booking {doc.name} for {doc.service_type} is Approved!\"\n        message = f\"\"\"\n        <html>\n        <body>\n            <p>Dear {doc.customer_name or 'Customer'},</p>\n            <p>We are pleased to inform you that your service booking has been <b>Approved</b>.</p>\n            <p><b>Booking Details:</b></p>\n            <ul>\n                <li><b>Booking ID:</b> {doc.name}</li>\n                <li><b>Service Type:</b> {doc.service_type}</li>\n                <li><b>Date:</b> {frappe.utils.format_date(doc.preferred_datetime) }  </li>\n                <li><b> Time: </b> {frappe.utils.format_datetime(doc.preferred_datetime, 'hh:mm a') } </li>\n                <li><b>Status:</b> {doc.status}</li>\n            </ul>\n            <p>We look forward to seeing you!</p>\n            <p>Best regards,<br>Alfastack Wellness Center</p>\n        </body>\n        </html>\n        \"\"\"\n\n        try:\n            frappe.sendmail(\n                recipients=customer_email,\n                subject=subject,\n                message=message\n            )\n            frappe.msgprint(f\"Confirmation email sent successfully to {customer_email}\") # Success message\n            frappe.log(f\"Email sent for booking {doc.name} to {customer_email}\") # Log to server logs\n        except Exception as e:\n            frappe.msgprint(f\"Failed to send confirmation email. Error: {str(e)}\") # Detailed error to user\n            frappe.log_error(\n                f\"Failed to send email for booking {doc.name} to {customer_email}. Error: {str(e)}\") # Critical error log\n    else:\n        frappe.msgprint(\"Customer email is empty or not found. Cannot send confirmation email.\") # Error for missing email\n        frappe.log( f\"Customer email not found for booking {doc.name}. Email not sent.\") # Log to server logs\nelse:\n   \n    pass",
  "script_type": "DocType Event"
 }
]